// Generated by Dagger (https://dagger.dev).
package com.example.android.nasa_apod.di;

import com.example.android.nasa_apod.api.ApodService;
import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideApodServiceFactory implements Factory<ApodService> {
  private final Provider<OkHttpClient> clientProvider;

  private final Provider<Gson> gsonProvider;

  public NetworkModule_ProvideApodServiceFactory(Provider<OkHttpClient> clientProvider,
      Provider<Gson> gsonProvider) {
    this.clientProvider = clientProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public ApodService get() {
    return provideApodService(clientProvider.get(), gsonProvider.get());
  }

  public static NetworkModule_ProvideApodServiceFactory create(
      Provider<OkHttpClient> clientProvider, Provider<Gson> gsonProvider) {
    return new NetworkModule_ProvideApodServiceFactory(clientProvider, gsonProvider);
  }

  public static ApodService provideApodService(OkHttpClient client, Gson gson) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideApodService(client, gson));
  }
}
