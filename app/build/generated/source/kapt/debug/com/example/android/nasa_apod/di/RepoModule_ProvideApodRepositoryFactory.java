// Generated by Dagger (https://dagger.dev).
package com.example.android.nasa_apod.di;

import com.example.android.nasa_apod.api.ApodService;
import com.example.android.nasa_apod.domain.dao.ApodDao;
import com.example.android.nasa_apod.domain.repository.ApodRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvideApodRepositoryFactory implements Factory<ApodRepository> {
  private final Provider<ApodDao> appDaoProvider;

  private final Provider<ApodService> apodServiceProvider;

  public RepoModule_ProvideApodRepositoryFactory(Provider<ApodDao> appDaoProvider,
      Provider<ApodService> apodServiceProvider) {
    this.appDaoProvider = appDaoProvider;
    this.apodServiceProvider = apodServiceProvider;
  }

  @Override
  public ApodRepository get() {
    return provideApodRepository(appDaoProvider.get(), apodServiceProvider.get());
  }

  public static RepoModule_ProvideApodRepositoryFactory create(Provider<ApodDao> appDaoProvider,
      Provider<ApodService> apodServiceProvider) {
    return new RepoModule_ProvideApodRepositoryFactory(appDaoProvider, apodServiceProvider);
  }

  public static ApodRepository provideApodRepository(ApodDao appDao, ApodService apodService) {
    return Preconditions.checkNotNullFromProvides(RepoModule.INSTANCE.provideApodRepository(appDao, apodService));
  }
}
